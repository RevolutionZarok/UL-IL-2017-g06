package icrash.environment.operations.actCoordinator.outactCoordinator.oeTryPasswordReset {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar
import icrash.concepts.primarytypes.datatypes
import icrash.concepts.primarytypes.classes
import icrash.concepts.primarytypes.authentication.datatypes
import icrash.environment

	Operation Model {
	
		operation: icrash.environment.actCoordinator.outactCoordinator.oeTryPasswordReset(AdtLogin:dtLogin, AResetCode:dtResetCode, ANewPwd:dtPassword):ptBoolean{
			preP{
				let TheSystem: ctState in
				let AvpStarted: ptBoolean in
				let TheActor:actCoordinator in
				self.rnActor.rnSystem = TheSystem
				and self.rnActor = TheActor
				
				/*PreP01*/
				and self.rnActor.rnSystem.vpStarted = AvpStarted
				and AvpStarted = true
				/*PreP02*/
				and TheActor.rnctAuthenticated.vpIsLogged = false
			}
			preF{
				/*PreF01*/
				AdtLogin.is() = true
				/*PreF02*/
				and AResetCode.is() = true
				/*PreF03*/
				and ANewPwd.is() = true
			}
			postF{
				let TheSystem: ctState in
				let TheactCoordinator:actCoordinator in
  
				self.rnActor.rnSystem = TheSystem
				and self.rnActor = TheactAuthenticated
				
				/*PostF01*/
				if (TheactCoordinator.rnctCoordinator.login = AdtLogin 
					and TheactCoordinator.rnctCoordinator.resetCode = AResetCode) then (
					TheactCoordinator.rnctCoordinator@post.pwd = AdtPassword
					result = true
				) else (
					result = false
				)
				endif
					
			}
			postP{
				/*PostP01*/
				true
			}
		}
	}
	
}
